"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5767],{28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var o=r(96540);const s={},t=o.createContext(s);function a(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(t.Provider,{value:n},e.children)}},32169:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var o=r(74848),s=r(28453);const t={},a="IConsumerAdmin.ChangeWorkersCountAsync method",i={id:"reference/KafkaFlow.Admin/KafkaFlow.Admin/IConsumerAdmin/ChangeWorkersCountAsync",title:"IConsumerAdmin.ChangeWorkersCountAsync method",description:"Change the number of workers running in the consumer",source:"@site/docs/reference/KafkaFlow.Admin/KafkaFlow.Admin/IConsumerAdmin/ChangeWorkersCountAsync.md",sourceDirName:"reference/KafkaFlow.Admin/KafkaFlow.Admin/IConsumerAdmin",slug:"/reference/KafkaFlow.Admin/KafkaFlow.Admin/IConsumerAdmin/ChangeWorkersCountAsync",permalink:"/kafkaflow/docs/reference/KafkaFlow.Admin/KafkaFlow.Admin/IConsumerAdmin/ChangeWorkersCountAsync",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow.Admin/KafkaFlow.Admin/IConsumerAdmin/ChangeWorkersCountAsync.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IConsumerAdmin interface",permalink:"/kafkaflow/docs/reference/KafkaFlow.Admin/KafkaFlow.Admin/IConsumerAdmin/"},next:{title:"IConsumerAdmin.PauseConsumerAsync method",permalink:"/kafkaflow/docs/reference/KafkaFlow.Admin/KafkaFlow.Admin/IConsumerAdmin/PauseConsumerAsync"}},d={},c=[{value:"See Also",id:"see-also",level:2}];function m(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"iconsumeradminchangeworkerscountasync-method",children:"IConsumerAdmin.ChangeWorkersCountAsync method"}),"\n",(0,o.jsx)(n.p,{children:"Change the number of workers running in the consumer"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"public Task ChangeWorkersCountAsync(string consumerName, int workersCount)\n"})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"parameter"}),(0,o.jsx)(n.th,{children:"description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"consumerName"}),(0,o.jsx)(n.td,{children:"The consumer unique name"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"workersCount"}),(0,o.jsx)(n.td,{children:"The new number of workers"})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["interface\xa0",(0,o.jsx)(n.a,{href:"/kafkaflow/docs/reference/KafkaFlow.Admin/KafkaFlow.Admin/IConsumerAdmin/",children:"IConsumerAdmin"})]}),"\n",(0,o.jsxs)(n.li,{children:["namespace\xa0",(0,o.jsx)(n.a,{href:"/kafkaflow/docs/reference/KafkaFlow.Admin/",children:"KafkaFlow.Admin"})]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}}}]);