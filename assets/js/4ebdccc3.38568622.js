"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8632],{28453:(e,r,a)=>{a.d(r,{R:()=>l,x:()=>i});var s=a(96540);const t={},n=s.createContext(t);function l(e){const r=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(n.Provider,{value:r},e.children)}},83083:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>o});var s=a(74848),t=a(28453);const n={},l="ISchemaRegistryTypeNameResolver interface",i={id:"reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/ISchemaRegistryTypeNameResolver",title:"ISchemaRegistryTypeNameResolver interface",description:"An interface to implement a type name resolver to messages serialized with schema registry serializers",source:"@site/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/ISchemaRegistryTypeNameResolver.md",sourceDirName:"reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver",slug:"/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/",permalink:"/kafkaflow/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/ISchemaRegistryTypeNameResolver.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ConfluentSerializerWrapper.SerializeAsync method",permalink:"/kafkaflow/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ConfluentSerializerWrapper/SerializeAsync"},next:{title:"ISchemaRegistryTypeNameResolver.ResolveAsync method",permalink:"/kafkaflow/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/ResolveAsync"}},c={},o=[{value:"Members",id:"members",level:2},{value:"See Also",id:"see-also",level:2}];function m(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"ischemaregistrytypenameresolver-interface",children:"ISchemaRegistryTypeNameResolver interface"}),"\n",(0,s.jsx)(r.p,{children:"An interface to implement a type name resolver to messages serialized with schema registry serializers"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:"public interface ISchemaRegistryTypeNameResolver\n"})}),"\n",(0,s.jsx)(r.h2,{id:"members",children:"Members"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"name"}),(0,s.jsx)(r.th,{children:"description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow.SchemaRegistry/KafkaFlow/ISchemaRegistryTypeNameResolver/ResolveAsync",children:"ResolveAsync"}),"(\u2026)"]}),(0,s.jsx)(r.td,{children:"Resolve the message type name of a schema"})]})})]}),"\n",(0,s.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["namespace\xa0",(0,s.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow.SchemaRegistry/",children:"KafkaFlow"})]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);