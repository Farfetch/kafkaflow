"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2532],{20267:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>t,contentTitle:()=>o,default:()=>f,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var a=r(74848),l=r(28453);const n={},o="IMessageTypeResolver interface",i={id:"reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/IMessageTypeResolver",title:"IMessageTypeResolver interface",description:"Used by the serializer middleware to resolve the type when consuming and store it when producing",source:"@site/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/IMessageTypeResolver.md",sourceDirName:"reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver",slug:"/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/IMessageTypeResolver.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SerializerProducerMiddleware.Invoke method",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer/SerializerProducerMiddleware/Invoke"},next:{title:"IMessageTypeResolver.OnConsumeAsync method",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/OnConsumeAsync"}},t={},d=[{value:"Members",id:"members",level:2},{value:"See Also",id:"see-also",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h1,{id:"imessagetyperesolver-interface",children:"IMessageTypeResolver interface"}),"\n",(0,a.jsx)(s.p,{children:"Used by the serializer middleware to resolve the type when consuming and store it when producing"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",children:"public interface IMessageTypeResolver\n"})}),"\n",(0,a.jsx)(s.h2,{id:"members",children:"Members"}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"name"}),(0,a.jsx)(s.th,{children:"description"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsxs)(s.td,{children:[(0,a.jsx)(s.a,{href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/OnConsumeAsync",children:"OnConsumeAsync"}),"(\u2026)"]}),(0,a.jsx)(s.td,{children:"Returns the message type when consuming"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsxs)(s.td,{children:[(0,a.jsx)(s.a,{href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/OnProduceAsync",children:"OnProduceAsync"}),"(\u2026)"]}),(0,a.jsx)(s.td,{children:"Stores the message type somewhere when producing"})]})]})]}),"\n",(0,a.jsx)(s.h2,{id:"see-also",children:"See Also"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["namespace\xa0",(0,a.jsx)(s.a,{href:"/kafkaflow/docs/reference/KafkaFlow/",children:"KafkaFlow.Middlewares.Serializer.Resolvers"})]}),"\n"]})]})}function f(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>i});var a=r(96540);const l={},n=a.createContext(l);function o(e){const s=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),a.createElement(n.Provider,{value:s},e.children)}}}]);