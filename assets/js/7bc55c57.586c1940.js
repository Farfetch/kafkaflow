"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8492],{15801:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var t=r(74848),i=r(28453);const s={},l="ClusterConfigurationBuilderExtensions.EnableTelemetry method (1 of 2)",o={id:"reference/KafkaFlow.Admin/KafkaFlow/ClusterConfigurationBuilderExtensions/EnableTelemetry",title:"ClusterConfigurationBuilderExtensions.EnableTelemetry method (1 of 2)",description:"See Also",source:"@site/docs/reference/KafkaFlow.Admin/KafkaFlow/ClusterConfigurationBuilderExtensions/EnableTelemetry.md",sourceDirName:"reference/KafkaFlow.Admin/KafkaFlow/ClusterConfigurationBuilderExtensions",slug:"/reference/KafkaFlow.Admin/KafkaFlow/ClusterConfigurationBuilderExtensions/EnableTelemetry",permalink:"/kafkaflow/docs/reference/KafkaFlow.Admin/KafkaFlow/ClusterConfigurationBuilderExtensions/EnableTelemetry",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow.Admin/KafkaFlow/ClusterConfigurationBuilderExtensions/EnableTelemetry.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ClusterConfigurationBuilderExtensions.EnableAdminMessages method",permalink:"/kafkaflow/docs/reference/KafkaFlow.Admin/KafkaFlow/ClusterConfigurationBuilderExtensions/EnableAdminMessages"},next:{title:"IConsumerAdmin interface",permalink:"/kafkaflow/docs/reference/KafkaFlow.Admin/KafkaFlow.Admin/IConsumerAdmin/"}},a={},d=[{value:"See Also",id:"see-also",level:2},{value:"See Also",id:"see-also-1",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"clusterconfigurationbuilderextensionsenabletelemetry-method-1-of-2",children:"ClusterConfigurationBuilderExtensions.EnableTelemetry method (1 of 2)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public static IClusterConfigurationBuilder EnableTelemetry(\n    this IClusterConfigurationBuilder cluster, string topicName)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["class\xa0",(0,t.jsx)(n.a,{href:"/kafkaflow/docs/reference/KafkaFlow.Admin/KafkaFlow/ClusterConfigurationBuilderExtensions/",children:"ClusterConfigurationBuilderExtensions"})]}),"\n",(0,t.jsxs)(n.li,{children:["namespace\xa0",(0,t.jsx)(n.a,{href:"/kafkaflow/docs/reference/KafkaFlow.Admin/",children:"KafkaFlow"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h1,{id:"clusterconfigurationbuilderextensionsenabletelemetry-method-2-of-2",children:"ClusterConfigurationBuilderExtensions.EnableTelemetry method (2 of 2)"}),"\n",(0,t.jsx)(n.p,{children:"Creates the telemetry producer and consumer to send and receive metric messages"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public static IClusterConfigurationBuilder EnableTelemetry(\n    this IClusterConfigurationBuilder cluster, string topicName, string consumerGroup, \n    TimeSpan? cleanRunInterval = default, TimeSpan? expiryTime = default, int topicPartition = 0)\n"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"parameter"}),(0,t.jsx)(n.th,{children:"description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"cluster"}),(0,t.jsx)(n.td,{children:"The cluster configuration builder"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"topicName"}),(0,t.jsx)(n.td,{children:"The topic to be used by the metric commands"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"consumerGroup"}),(0,t.jsx)(n.td,{children:"The consumer group prefix"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"cleanRunInterval"}),(0,t.jsx)(n.td,{children:"How often run storage cleanup. Every 10 minutes by default"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"expiryTime"}),(0,t.jsx)(n.td,{children:"Cleanup will remove metrics older than specified interval. 6 hours by default"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"topicPartition"}),(0,t.jsx)(n.td,{children:"The partition used to produce and consumer telemetry data"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"see-also-1",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["class\xa0",(0,t.jsx)(n.a,{href:"/kafkaflow/docs/reference/KafkaFlow.Admin/KafkaFlow/ClusterConfigurationBuilderExtensions/",children:"ClusterConfigurationBuilderExtensions"})]}),"\n",(0,t.jsxs)(n.li,{children:["namespace\xa0",(0,t.jsx)(n.a,{href:"/kafkaflow/docs/reference/KafkaFlow.Admin/",children:"KafkaFlow"})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var t=r(96540);const i={},s=t.createContext(i);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);