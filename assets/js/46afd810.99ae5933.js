"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6483],{28453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>o});var i=a(96540);const s={},r=i.createContext(s);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(r.Provider,{value:n},e.children)}},91340:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=a(74848),s=a(28453);const r={sidebar_position:0},t="Configuration",o={id:"guides/configuration",title:"Configuration",description:"In this section, we will introduce how configuration is done in KafkaFlow.",source:"@site/versioned_docs/version-2.x/guides/configuration.md",sourceDirName:"guides",slug:"/guides/configuration",permalink:"/kafkaflow/docs/2.x/guides/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/versioned_docs/version-2.x/guides/configuration.md",tags:[],version:"2.x",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Guides",permalink:"/kafkaflow/docs/2.x/category/guides"},next:{title:"Producers",permalink:"/kafkaflow/docs/2.x/guides/producers"}},c={},d=[{value:"Using a Hosted Service",id:"hosted-service",level:2},{value:"Using ASP.NET Core Startup",id:"aspnet-core-startup",level:2},{value:"Using Startup.cs",id:"startup-class",level:2},{value:"Using other DI Container (Unity or other)",id:"other-di-container",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.p,{children:"In this section, we will introduce how configuration is done in KafkaFlow."}),"\n",(0,i.jsx)(n.p,{children:"KafkaFlow is a highly configured framework. You can customize it through a Fluent Builder."}),"\n",(0,i.jsxs)(n.p,{children:["Using the builder, you can configure ",(0,i.jsx)(n.a,{href:"/kafkaflow/docs/2.x/guides/logging",children:"Logging"}),", ",(0,i.jsx)(n.a,{href:"/kafkaflow/docs/2.x/guides/global-events",children:"Global Events"}),", Clusters, Producers, Consumers and others."]}),"\n",(0,i.jsx)(n.p,{children:"There are a few options to configure KafkaFlow:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#hosted-service",children:"Using a Hosted Service"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#aspnet-core-startup",children:"Using ASP.NET Core Startup"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#startup-class",children:"Using Startup.cs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#other-di-container",children:"Using other DI Container (Unity or other)"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"hosted-service",children:"Using a Hosted Service"}),"\n",(0,i.jsx)(n.p,{children:"The Hosted Service model can be used as a hosting model on applications like Console apps."}),"\n",(0,i.jsx)(n.p,{children:"Add the required package references:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dotnet add package KafkaFlow\ndotnet add package KafkaFlow.Extensions.Hosting\ndotnet add package KafkaFlow.Microsoft.DependencyInjection\ndotnet add package Microsoft.Extensions.Hosting\n"})}),"\n",(0,i.jsx)(n.p,{children:"Register KafkaFlow Hosted Service:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'using KafkaFlow;\nusing Microsoft.Extensions.Hosting;\n\npublic static class Program\n{\n    private static async Task Main(string[] args)\n    {\n        await Host\n            .CreateDefaultBuilder(args)\n            .ConfigureServices((hostContext, services) =>\n            {\n                services.AddKafkaFlowHostedService(kafka => kafka\n                    .AddCluster(cluster => cluster\n                        .WithBrokers(new[] { "localhost:9092" })\n                        ...\n                    )\n                );\n            })\n            .Build()\n            .RunAsync();\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"aspnet-core-startup",children:"Using ASP.NET Core Startup"}),"\n",(0,i.jsxs)(n.p,{children:["After .NET 6 the ",(0,i.jsx)(n.code,{children:"Startup.cs"})," class is not required."]}),"\n",(0,i.jsx)(n.p,{children:"Add the required package references:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dotnet add package KafkaFlow\ndotnet add package KafkaFlow.Microsoft.DependencyInjection\n"})}),"\n",(0,i.jsx)(n.p,{children:"To configure KafkaFlow, use the builder to register KafkaFlow dependencies and start the Kafka Bus before the application run."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'using KafkaFlow;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddKafka(kafka => kafka\n    .AddCluster(cluster => cluster\n        .WithBrokers(new[] { "localhost:9092" })\n        ...\n    )\n);\n\nvar app = builder.Build();\n\napp.MapGet("/", () => "Hello World!");\n\nvar kafkaBus = app.Services.CreateKafkaBus();\nawait kafkaBus.StartAsync();\n\napp.Run();\n'})}),"\n",(0,i.jsx)(n.h2,{id:"startup-class",children:"Using Startup.cs"}),"\n",(0,i.jsx)(n.p,{children:"Add the required package references:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dotnet add package KafkaFlow\ndotnet add package KafkaFlow.Microsoft.DependencyInjection\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To configure KafkaFlow, use the ",(0,i.jsx)(n.code,{children:"ConfigureServices"})," method to register KafkaFlow dependencies, and on the ",(0,i.jsx)(n.code,{children:"Configure"})," method register an event to start the Kafka Bus on application start."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'public void ConfigureServices(IServiceCollection services)\n{\n    services.AddKafka(kafka => kafka\n        .UseConsoleLog()\n        .AddCluster(cluster => cluster\n            .WithBrokers(new[] { "localhost:9092" })\n            ...\n        )\n    );\n}\n\npublic void Configure(\n    IApplicationBuilder app,\n    IWebHostEnvironment env,\n    IHostApplicationLifetime lifetime)\n{\n    var kafkaBus = app.ApplicationServices.CreateKafkaBus();\n\n    lifetime.ApplicationStarted.Register(() => kafkaBus.StartAsync(lifetime.ApplicationStopped));\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"other-di-container",children:"Using other DI Container (Unity or other)"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["If you want to use a DI container other than Unity, check ",(0,i.jsx)(n.a,{href:"/kafkaflow/docs/2.x/guides/dependency-injection",children:"how to implement"})," it first."]})}),"\n",(0,i.jsx)(n.p,{children:"Add the required package references:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dotnet add package KafkaFlow\ndotnet add package KafkaFlow.Unity\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"KafkaFlowConfigurator"})," to specify the desired Dependency Injection container:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'using KafkaFlow.Configuration;\nusing KafkaFlow.Unity;\nusing Unity;\n\n\nstatic class Program\n{\n    public static async Task Main(string[] args)\n    {\n        var container = new UnityContainer();\n\n        var configurator = new KafkaFlowConfigurator(\n            new UnityDependencyConfigurator(container),\n            kafka => kafka\n                .AddCluster(cluster => cluster\n                    .WithBrokers(new[] { "localhost:9092" })\n                    ...\n                )\n        );\n\n        var bus = configurator.CreateBus(new UnityDependencyResolver(container));\n\n        // Call when your app starts\n        await bus.StartAsync();\n\n        // Call when your app stops\n        await bus.StopAsync();\n    }\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);