"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3138],{23941:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var a=r(74848),s=r(28453);const t={sidebar_position:2,sidebar_label:"Quickstart"},o="Quickstart: Create your first application with KafkaFlow",c={id:"getting-started/create-your-first-application",title:"Quickstart: Create your first application with KafkaFlow",description:"In this article, you use C# and the .NET CLI to create two applications that will produce and consume events from Apache Kafka.",source:"@site/docs/getting-started/create-your-first-application.md",sourceDirName:"getting-started",slug:"/getting-started/create-your-first-application",permalink:"/kafkaflow/docs/getting-started/create-your-first-application",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/getting-started/create-your-first-application.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Quickstart"},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/kafkaflow/docs/getting-started/installation"},next:{title:"Packages",permalink:"/kafkaflow/docs/getting-started/packages"}},i={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Overview",id:"overview",level:2},{value:"Steps",id:"steps",level:2},{value:"1. Create a folder for your applications",id:"1-create-a-folder-for-your-applications",level:3},{value:"2. Setup Apache Kafka",id:"2-setup-apache-kafka",level:3},{value:"3. Start the cluster",id:"3-start-the-cluster",level:3},{value:"4. Create Producer Project",id:"4-create-producer-project",level:3},{value:"5. Install KafkaFlow packages",id:"5-install-kafkaflow-packages",level:3},{value:"6. Create the Message contract",id:"6-create-the-message-contract",level:3},{value:"7. Create message sender",id:"7-create-message-sender",level:3},{value:"8. Create Consumer Project",id:"8-create-consumer-project",level:3},{value:"9. Add a reference to the Producer",id:"9-add-a-reference-to-the-producer",level:3},{value:"10. Install KafkaFlow packages",id:"10-install-kafkaflow-packages",level:3},{value:"11. Create a Message Handler",id:"11-create-a-message-handler",level:3},{value:"12. Create the Message Consumer",id:"12-create-the-message-consumer",level:3},{value:"13. Run!",id:"13-run",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"quickstart-create-your-first-application-with-kafkaflow",children:"Quickstart: Create your first application with KafkaFlow"}),"\n",(0,a.jsx)(n.p,{children:"In this article, you use C# and the .NET CLI to create two applications that will produce and consume events from Apache Kafka."}),"\n",(0,a.jsx)(n.p,{children:"By the end of the article, you will know how to use KafkaFlow to either Produce or Consume events from Apache Kafka."}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://dotnet.microsoft.com/en-us/download/dotnet/6.0",children:".NET 6.0 SDK"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.docker.com/products/docker-desktop/",children:"Docker Desktop"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.p,{children:"You will create two applications:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Consumer:"})," Will be running waiting for incoming messages and will write them to the console."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Producer:"})," Will send a message every time you run the application."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"To connect them, you will be running an Apache Kafka cluster using Docker."}),"\n",(0,a.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,a.jsx)(n.h3,{id:"1-create-a-folder-for-your-applications",children:"1. Create a folder for your applications"}),"\n",(0,a.jsxs)(n.p,{children:["Create a new folder with the name ",(0,a.jsx)(n.em,{children:"KafkaFlowQuickstart"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"2-setup-apache-kafka",children:"2. Setup Apache Kafka"}),"\n",(0,a.jsxs)(n.p,{children:["Inside the folder from step 1, create a ",(0,a.jsx)(n.code,{children:"docker-compose.yml"})," file. You can download it from ",(0,a.jsx)(n.a,{href:"https://github.com/Farfetch/kafkaflow/blob/master/docker-compose.yml",children:"here"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"3-start-the-cluster",children:"3. Start the cluster"}),"\n",(0,a.jsx)(n.p,{children:"Using your terminal of choice, start the cluster."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,a.jsx)(n.h3,{id:"4-create-producer-project",children:"4. Create Producer Project"}),"\n",(0,a.jsxs)(n.p,{children:["Run the following command to create a Console Project named ",(0,a.jsx)(n.em,{children:"Producer"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"dotnet new console --name Producer\n"})}),"\n",(0,a.jsx)(n.h3,{id:"5-install-kafkaflow-packages",children:"5. Install KafkaFlow packages"}),"\n",(0,a.jsxs)(n.p,{children:["Inside the ",(0,a.jsx)(n.em,{children:"Producer"})," project directory, run the following commands to install the required packages."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"dotnet add package KafkaFlow\ndotnet add package KafkaFlow.Microsoft.DependencyInjection\ndotnet add package KafkaFlow.LogHandler.Console\ndotnet add package KafkaFlow.Serializer.JsonCore\ndotnet add package Microsoft.Extensions.DependencyInjection\n"})}),"\n",(0,a.jsx)(n.h3,{id:"6-create-the-message-contract",children:"6. Create the Message contract"}),"\n",(0,a.jsxs)(n.p,{children:["Add a new class file named ",(0,a.jsx)(n.em,{children:"HelloMessage.cs"})," and add the following example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"namespace Producer;\n\npublic class HelloMessage\n{\n    public string Text { get; set; } = default!;\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"7-create-message-sender",children:"7. Create message sender"}),"\n",(0,a.jsxs)(n.p,{children:["Replace the content of the ",(0,a.jsx)(n.em,{children:"Program.cs"})," with the following example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'using Microsoft.Extensions.DependencyInjection;\nusing KafkaFlow.Producers;\nusing KafkaFlow.Serializer;\nusing KafkaFlow;\nusing Producer;\n\nvar services = new ServiceCollection();\n\nconst string topicName = "sample-topic";\nconst string producerName = "say-hello";\n\nservices.AddKafka(\n    kafka => kafka\n        .UseConsoleLog()\n        .AddCluster(\n            cluster => cluster\n                .WithBrokers(new[] { "localhost:9092" })\n                .CreateTopicIfNotExists(topicName, 1, 1)\n                .AddProducer(\n                    producerName,\n                    producer => producer\n                        .DefaultTopic(topicName)\n                        .AddMiddlewares(m =>\n                            m.AddSerializer<JsonCoreSerializer>()\n                            )\n                )\n        )\n);\n\nvar serviceProvider = services.BuildServiceProvider();\n\nvar producer = serviceProvider\n    .GetRequiredService<IProducerAccessor>()\n    .GetProducer(producerName);\n\nawait producer.ProduceAsync(\n                   topicName,\n                   Guid.NewGuid().ToString(),\n                   new HelloMessage { Text = "Hello!" });\n\n\nConsole.WriteLine("Message sent!");\n\n'})}),"\n",(0,a.jsx)(n.h3,{id:"8-create-consumer-project",children:"8. Create Consumer Project"}),"\n",(0,a.jsxs)(n.p,{children:["Run the following command to create a Console Project named ",(0,a.jsx)(n.em,{children:"Consumer"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"dotnet new console --name Consumer\n"})}),"\n",(0,a.jsx)(n.h3,{id:"9-add-a-reference-to-the-producer",children:"9. Add a reference to the Producer"}),"\n",(0,a.jsx)(n.p,{children:"In order to access the message contract, add a reference to the Producer Project."}),"\n",(0,a.jsxs)(n.p,{children:["Inside the ",(0,a.jsx)(n.em,{children:"Consumer"})," project directory, run the following commands to add the reference."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"dotnet add reference ../Producer\n"})}),"\n",(0,a.jsx)(n.h3,{id:"10-install-kafkaflow-packages",children:"10. Install KafkaFlow packages"}),"\n",(0,a.jsxs)(n.p,{children:["Inside the ",(0,a.jsx)(n.em,{children:"Consumer"})," project directory, run the following commands to install the required packages."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"dotnet add package KafkaFlow\ndotnet add package KafkaFlow.Microsoft.DependencyInjection\ndotnet add package KafkaFlow.LogHandler.Console\ndotnet add package KafkaFlow.Serializer.JsonCore\ndotnet add package Microsoft.Extensions.DependencyInjection\n"})}),"\n",(0,a.jsx)(n.h3,{id:"11-create-a-message-handler",children:"11. Create a Message Handler"}),"\n",(0,a.jsxs)(n.p,{children:["Create a new class file named ",(0,a.jsx)(n.em,{children:"HelloMessageHandler.cs"})," and add the following example."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'using KafkaFlow;\nusing Producer;\n\nnamespace Consumer;\n\npublic class HelloMessageHandler : IMessageHandler<HelloMessage>\n{\n    public Task Handle(IMessageContext context, HelloMessage message)\n    {\n        Console.WriteLine(\n            "Partition: {0} | Offset: {1} | Message: {2}",\n            context.ConsumerContext.Partition,\n            context.ConsumerContext.Offset,\n            message.Text);\n\n        return Task.CompletedTask;\n    }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"12-create-the-message-consumer",children:"12. Create the Message Consumer"}),"\n",(0,a.jsxs)(n.p,{children:["Replace the content of the ",(0,a.jsx)(n.em,{children:"Program.cs"})," with the following example."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'using KafkaFlow;\nusing KafkaFlow.Serializer;\nusing Microsoft.Extensions.DependencyInjection;\nusing Consumer;\n\nconst string topicName = "sample-topic";\nvar services = new ServiceCollection();\n\nservices.AddKafka(kafka => kafka\n    .UseConsoleLog()\n    .AddCluster(cluster => cluster\n        .WithBrokers(new[] { "localhost:9092" })\n        .CreateTopicIfNotExists(topicName, 1, 1)\n        .AddConsumer(consumer => consumer\n            .Topic(topicName)\n            .WithGroupId("sample-group")\n            .WithBufferSize(100)\n            .WithWorkersCount(10)\n            .AddMiddlewares(middlewares => middlewares\n                .AddDeserializer<JsonCoreDeserializer>()\n                .AddTypedHandlers(h => h.AddHandler<HelloMessageHandler>())\n            )\n        )\n    )\n);\n\nvar serviceProvider = services.BuildServiceProvider();\n\nvar bus = serviceProvider.CreateKafkaBus();\n\nawait bus.StartAsync();\n\nConsole.ReadKey();\n\nawait bus.StopAsync();\n'})}),"\n",(0,a.jsx)(n.h3,{id:"13-run",children:"13. Run!"}),"\n",(0,a.jsxs)(n.p,{children:["From the ",(0,a.jsx)(n.code,{children:"KafkaFlowQuickstart"})," directory:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Run the Consumer:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"dotnet run --project Consumer/Consumer.csproj \n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"From another terminal, run the Producer:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"dotnet run --project Producer/Producer.csproj \n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var a=r(96540);const s={},t=a.createContext(s);function o(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);