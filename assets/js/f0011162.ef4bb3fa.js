"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3554],{11980:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>i,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=n(74848),t=n(28453);const o={},a="IMessageConsumer.ChangeWorkersCountAndRestartAsync method",c={id:"reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/ChangeWorkersCountAndRestartAsync",title:"IMessageConsumer.ChangeWorkersCountAndRestartAsync method",description:"Restart the current consumer with the new worker count",source:"@site/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/ChangeWorkersCountAndRestartAsync.md",sourceDirName:"reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer",slug:"/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/ChangeWorkersCountAndRestartAsync",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/ChangeWorkersCountAndRestartAsync",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/ChangeWorkersCountAndRestartAsync.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IMessageConsumer.Assignment property",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/Assignment"},next:{title:"IMessageConsumer.ClientInstanceName property",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/ClientInstanceName"}},l={},u=[{value:"See Also",id:"see-also",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"imessageconsumerchangeworkerscountandrestartasync-method",children:"IMessageConsumer.ChangeWorkersCountAndRestartAsync method"}),"\n",(0,r.jsx)(s.p,{children:"Restart the current consumer with the new worker count"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-csharp",children:"public Task ChangeWorkersCountAndRestartAsync(int workersCount)\n"})}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"parameter"}),(0,r.jsx)(s.th,{children:"description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"workersCount"}),(0,r.jsx)(s.td,{children:"The new workers count"})]})})]}),"\n",(0,r.jsx)(s.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["interface\xa0",(0,r.jsx)(s.a,{href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/",children:"IMessageConsumer"})]}),"\n",(0,r.jsxs)(s.li,{children:["namespace\xa0",(0,r.jsx)(s.a,{href:"/kafkaflow/docs/reference/KafkaFlow/",children:"KafkaFlow.Consumers"})]}),"\n"]})]})}function i(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>c});var r=n(96540);const t={},o=r.createContext(t);function a(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);