"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[443],{28453:(e,r,a)=>{a.d(r,{R:()=>n,x:()=>l});var t=a(96540);const i={},o=t.createContext(i);function n(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),t.createElement(o.Provider,{value:r},e.children)}},65879:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>s,contentTitle:()=>n,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>f});var t=a(74848),i=a(28453);const o={},n="KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf assembly",l={id:"reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf",title:"KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf assembly",description:"KafkaFlow namespace",source:"@site/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf.md",sourceDirName:"reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf",slug:"/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/",permalink:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ConfluentProtobufSerializer.SerializeAsync method",permalink:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry/ConfluentProtobufSerializer/SerializeAsync"},next:{title:"KafkaFlow.Unity",permalink:"/kafkaflow/docs/category/kafkaflowunity"}},s={},f=[{value:"KafkaFlow namespace",id:"kafkaflow-namespace",level:2},{value:"KafkaFlow.Serializer.SchemaRegistry namespace",id:"kafkaflowserializerschemaregistry-namespace",level:2}];function c(e){const r={a:"a",h1:"h1",h2:"h2",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"kafkaflowserializerschemaregistryconfluentprotobuf-assembly",children:"KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf assembly"}),"\n",(0,t.jsx)(r.h2,{id:"kafkaflow-namespace",children:"KafkaFlow namespace"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"public type"}),(0,t.jsx)(r.th,{children:"description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsxs)(r.td,{children:["static\xa0class\xa0",(0,t.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow/ConsumerConfigurationBuilderExtensions/",children:"ConsumerConfigurationBuilderExtensions"})]}),(0,t.jsx)(r.td,{children:"No needed"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsxs)(r.td,{children:["static\xa0class\xa0",(0,t.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow/ProducerConfigurationBuilderExtensions/",children:"ProducerConfigurationBuilderExtensions"})]}),(0,t.jsx)(r.td,{children:"No needed"})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"kafkaflowserializerschemaregistry-namespace",children:"KafkaFlow.Serializer.SchemaRegistry namespace"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"public type"}),(0,t.jsx)(r.th,{children:"description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsxs)(r.td,{children:["class\xa0",(0,t.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry/ConfluentProtobufDeserializer/",children:"ConfluentProtobufDeserializer"})]}),(0,t.jsx)(r.td,{children:"A protobuf message serializer integrated with the confluent schema registry"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsxs)(r.td,{children:["class\xa0",(0,t.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry/ConfluentProtobufSerializer/",children:"ConfluentProtobufSerializer"})]}),(0,t.jsx)(r.td,{children:"A protobuf message serializer integrated with the confluent schema registry"})]})]})]})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);