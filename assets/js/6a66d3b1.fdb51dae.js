"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2992],{28453:(e,r,a)=>{a.d(r,{R:()=>t,x:()=>s});var l=a(96540);const i={},d=l.createContext(i);function t(e){const r=l.useContext(d);return l.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),l.createElement(d.Provider,{value:r},e.children)}},31360:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>o,contentTitle:()=>t,default:()=>f,frontMatter:()=>d,metadata:()=>s,toc:()=>n});var l=a(74848),i=a(28453);const d={},t="SerializerProducerMiddleware.Invoke method",s={id:"reference/KafkaFlow/KafkaFlow.Middlewares.Serializer/SerializerProducerMiddleware/Invoke",title:"SerializerProducerMiddleware.Invoke method",description:"Serializes message based on message type resolver strategy",source:"@site/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer/SerializerProducerMiddleware/Invoke.md",sourceDirName:"reference/KafkaFlow/KafkaFlow.Middlewares.Serializer/SerializerProducerMiddleware",slug:"/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer/SerializerProducerMiddleware/Invoke",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer/SerializerProducerMiddleware/Invoke",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer/SerializerProducerMiddleware/Invoke.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SerializerProducerMiddleware constructor",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer/SerializerProducerMiddleware/"},next:{title:"IMessageTypeResolver interface",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/"}},o={},n=[{value:"See Also",id:"see-also",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.h1,{id:"serializerproducermiddlewareinvoke-method",children:"SerializerProducerMiddleware.Invoke method"}),"\n",(0,l.jsx)(r.p,{children:"Serializes message based on message type resolver strategy"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-csharp",children:"public Task Invoke(IMessageContext context, MiddlewareDelegate next)\n"})}),"\n",(0,l.jsxs)(r.table,{children:[(0,l.jsx)(r.thead,{children:(0,l.jsxs)(r.tr,{children:[(0,l.jsx)(r.th,{children:"parameter"}),(0,l.jsx)(r.th,{children:"description"})]})}),(0,l.jsxs)(r.tbody,{children:[(0,l.jsxs)(r.tr,{children:[(0,l.jsx)(r.td,{children:"context"}),(0,l.jsx)(r.td,{children:"The IMessageContext containing the message and metadata"})]}),(0,l.jsxs)(r.tr,{children:[(0,l.jsx)(r.td,{children:"next"}),(0,l.jsx)(r.td,{children:"A delegate to call next middleware"})]})]})]}),"\n",(0,l.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["class\xa0",(0,l.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer/SerializerProducerMiddleware/",children:"SerializerProducerMiddleware"})]}),"\n",(0,l.jsxs)(r.li,{children:["namespace\xa0",(0,l.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow/",children:"KafkaFlow.Middlewares.Serializer"})]}),"\n"]})]})}function f(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);