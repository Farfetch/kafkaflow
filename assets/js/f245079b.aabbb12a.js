"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2424],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(96540);const o={},i=t.createContext(o);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:n},e.children)}},32335:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var t=s(74848),o=s(28453);const i={sidebar_position:2},a="Add Consumers",r={id:"guides/consumers/add-consumers",title:"Add Consumers",description:"In this section, we will learn how to add and configure a Consumer on KafkaFlow.",source:"@site/versioned_docs/version-2.x/guides/consumers/add-consumers.md",sourceDirName:"guides/consumers",slug:"/guides/consumers/add-consumers",permalink:"/kafkaflow/docs/2.x/guides/consumers/add-consumers",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/versioned_docs/version-2.x/guides/consumers/add-consumers.md",tags:[],version:"2.x",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Consumers",permalink:"/kafkaflow/docs/2.x/guides/consumers/"},next:{title:"Middlewares",permalink:"/kafkaflow/docs/2.x/category/middlewares"}},c={},d=[{value:"Automatic Partitions Assignment",id:"automatic-partitions-assignment",level:2},{value:"Manual Partitions Assignment",id:"manual-partitions-assignment",level:2},{value:"Offset Strategy",id:"offset-strategy",level:2},{value:"Store Offsets Manually",id:"store-offsets-manually",level:2},{value:"Disable Store Offsets",id:"disable-store-offsets",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"add-consumers",children:"Add Consumers"}),"\n",(0,t.jsx)(n.p,{children:"In this section, we will learn how to add and configure a Consumer on KafkaFlow."}),"\n",(0,t.jsx)(n.p,{children:"To add a consumer, you need to configure the Topic that the consumer will be listening to and the Consumer Group that will be part of. You can find an example below."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'using KafkaFlow;\nusing Microsoft.Extensions.DependencyInjection;\n\nservices.AddKafka(kafka => kafka\n    .AddCluster(cluster => cluster\n        .WithBrokers(new[] { "localhost:9092" })\n        .AddConsumer(consumer => consumer\n            .Topic("topic-name")\n            .WithGroupId("sample-group")\n            .WithBufferSize(100)\n            .WithWorkersCount(10)\n            .AddMiddlewares(middlewares => middlewares\n                ...\n            )\n        )\n    )\n);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["On a Consumer, you can configure the Middlewares that will be invoked. You can find more information on how to configure Middlewares ",(0,t.jsx)(n.a,{href:"../middlewares",children:"here"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["You can use a naming pattern such as a wildcard to connect to any topic that matches a naming convention.\nYou can find a sample on ",(0,t.jsx)(n.a,{href:"https://github.com/Farfetch/kafkaflow/tree/master/samples/KafkaFlow.Sample.WildcardConsumer",children:"here"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"automatic-partitions-assignment",children:"Automatic Partitions Assignment"}),"\n",(0,t.jsxs)(n.p,{children:["Using the ",(0,t.jsx)(n.code,{children:"Topic()"})," or ",(0,t.jsx)(n.code,{children:"Topics()"})," methods, the consumer will trigger the automatic partition assignment that will distribute the topic partitions across the application instances."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'using KafkaFlow;\nusing KafkaFlow.Serializer;\nusing Microsoft.Extensions.DependencyInjection;\nusing KafkaFlow.TypedHandler;\n\nservices.AddKafka(kafka => kafka\n    .AddCluster(cluster => cluster\n        .WithBrokers(new[] { "localhost:9092" })\n        .AddConsumer(consumer => consumer\n            .Topic("topic-name")\n            .WithGroupId("sample-group")\n            ...\n        )\n    )\n);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"manual-partitions-assignment",children:"Manual Partitions Assignment"}),"\n",(0,t.jsxs)(n.p,{children:["The client application can specify the topic partitions manually using the ",(0,t.jsx)(n.code,{children:"ManualAssignPartitions()"})," method instead of using the ",(0,t.jsx)(n.code,{children:"Topic()"})," or ",(0,t.jsx)(n.code,{children:"Topics()"})," methods."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'using KafkaFlow;\nusing KafkaFlow.Serializer;\nusing Microsoft.Extensions.DependencyInjection;\nusing KafkaFlow.TypedHandler;\n\nservices.AddKafka(kafka => kafka\n    .AddCluster(cluster => cluster\n        .WithBrokers(new[] { "localhost:9092" })\n        .AddConsumer(consumer => consumer\n            .ManualAssignPartitions("topic-name", new[] { 1, 2, 3 })\n            ...\n        )\n    )\n);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"offset-strategy",children:"Offset Strategy"}),"\n",(0,t.jsx)(n.p,{children:"You can configure the Offset Strategy for a consumer group in case the Consumer Group has no offset stored in Kafka.\nThere are two options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Earliest: Reads from the beginning of the Topic."}),"\n",(0,t.jsx)(n.li,{children:"Latest: Only reads new messages."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'using KafkaFlow;\nusing Microsoft.Extensions.DependencyInjection;\n\nservices.AddKafka(kafka => kafka\n    .AddCluster(cluster => cluster\n        .WithBrokers(new[] { "localhost:9092" })\n        .AddConsumer(consumer => consumer\n            .Topic("topic-name")\n            .WithGroupId("sample-group")\n            .WithAutoOffsetReset(AutoOffsetReset.Earliest)\n            ...\n        )\n    )\n);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"store-offsets-manually",children:"Store Offsets Manually"}),"\n",(0,t.jsxs)(n.p,{children:["By default, offsets are stored after the handler and middleware execution automatically.\nThis is the equivalent to configure the consumer as ",(0,t.jsx)(n.code,{children:"WithAutoStoreOffsets()"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["To control Offset storing, it's possible to configure using ",(0,t.jsx)(n.code,{children:"WithManualStoreOffsets()"})," as the following example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'using KafkaFlow;\nusing Microsoft.Extensions.DependencyInjection;\n\nservices.AddKafka(kafka => kafka\n    .AddCluster(cluster => cluster\n        .WithBrokers(new[] { "localhost:9092" })\n        .AddConsumer(consumer => consumer\n            .Topic("topic-name")\n            .WithGroupId("sample-group")\n            .WithManualStoreOffsets()\n            ...\n        )\n    )\n);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"disable-store-offsets",children:"Disable Store Offsets"}),"\n",(0,t.jsxs)(n.p,{children:["In a scenario where storing offsets it's not needed,  you can disable it by calling the ",(0,t.jsx)(n.code,{children:"WithoutStoringOffsets()"})," method in the consumer setup."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'using KafkaFlow;\nusing KafkaFlow.Serializer;\nusing Microsoft.Extensions.DependencyInjection;\nusing KafkaFlow.TypedHandler;\n\nservices.AddKafka(kafka => kafka\n    .AddCluster(cluster => cluster\n        .WithBrokers(new[] { "localhost:9092" })\n        .AddConsumer(consumer => consumer\n            .Topic("topic-name")\n            .WithGroupId("sample-group")\n            .WithoutStoringOffsets()\n            ...\n        )\n    )\n);\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);