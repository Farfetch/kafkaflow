"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6577],{28453:(e,s,r)=>{r.d(s,{R:()=>l,x:()=>t});var a=r(96540);const o={},n=a.createContext(o);function l(e){const s=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),a.createElement(n.Provider,{value:s},e.children)}},98298:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>n,metadata:()=>t,toc:()=>i});var a=r(74848),o=r(28453);const n={},l="IMessageTypeResolver.OnProduceAsync method",t={id:"reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/OnProduceAsync",title:"IMessageTypeResolver.OnProduceAsync method",description:"Stores the message type somewhere when producing",source:"@site/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/OnProduceAsync.md",sourceDirName:"reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver",slug:"/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/OnProduceAsync",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/OnProduceAsync",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/OnProduceAsync.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IMessageTypeResolver.OnConsumeAsync method",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/OnConsumeAsync"},next:{title:"SingleMessageTypeResolver constructor",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/SingleMessageTypeResolver/"}},c={},i=[{value:"See Also",id:"see-also",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h1,{id:"imessagetyperesolveronproduceasync-method",children:"IMessageTypeResolver.OnProduceAsync method"}),"\n",(0,a.jsx)(s.p,{children:"Stores the message type somewhere when producing"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",children:"public ValueTask OnProduceAsync(IMessageContext context)\n"})}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"parameter"}),(0,a.jsx)(s.th,{children:"description"})]})}),(0,a.jsx)(s.tbody,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"context"}),(0,a.jsx)(s.td,{children:"The IMessageContext containing the message and the metadata"})]})})]}),"\n",(0,a.jsx)(s.h2,{id:"see-also",children:"See Also"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["interface\xa0",(0,a.jsx)(s.a,{href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.Serializer.Resolvers/IMessageTypeResolver/",children:"IMessageTypeResolver"})]}),"\n",(0,a.jsxs)(s.li,{children:["namespace\xa0",(0,a.jsx)(s.a,{href:"/kafkaflow/docs/reference/KafkaFlow/",children:"KafkaFlow.Middlewares.Serializer.Resolvers"})]}),"\n"]})]})}function f(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);