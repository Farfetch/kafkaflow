"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2826],{28453:(e,r,s)=>{s.d(r,{R:()=>t,x:()=>c});var o=s(96540);const n={},a=o.createContext(n);function t(e){const r=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),o.createElement(a.Provider,{value:r},e.children)}},28730:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>t,default:()=>i,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var o=s(74848),n=s(28453);const a={},t="IMessageConsumer.WorkersCount property",c={id:"reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/WorkersCount",title:"IMessageConsumer.WorkersCount property",description:"Gets the current number of workers allocated of the consumer",source:"@site/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/WorkersCount.md",sourceDirName:"reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer",slug:"/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/WorkersCount",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/WorkersCount",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/WorkersCount.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IMessageConsumer.Topics property",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/Topics"},next:{title:"TopicPartitionLag constructor",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/TopicPartitionLag/"}},l={},u=[{value:"See Also",id:"see-also",level:2}];function f(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h1,{id:"imessageconsumerworkerscount-property",children:"IMessageConsumer.WorkersCount property"}),"\n",(0,o.jsx)(r.p,{children:"Gets the current number of workers allocated of the consumer"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:"public int WorkersCount \\{ get; }\n"})}),"\n",(0,o.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["interface\xa0",(0,o.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Consumers/IMessageConsumer/",children:"IMessageConsumer"})]}),"\n",(0,o.jsxs)(r.li,{children:["namespace\xa0",(0,o.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow/",children:"KafkaFlow.Consumers"})]}),"\n"]})]})}function i(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(f,{...e})}):f(e)}}}]);