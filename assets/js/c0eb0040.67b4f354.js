"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5951],{28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>l});var t=n(96540);const o={},i=t.createContext(o);function a(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:r},e.children)}},88001:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=n(74848),o=n(28453);const i={},a="IConsumerThrottlingMetricConfigurationBuilder.AddMetric method",l={id:"reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling.Configuration/IConsumerThrottlingMetricConfigurationBuilder/AddMetric",title:"IConsumerThrottlingMetricConfigurationBuilder.AddMetric method",description:"Configures the metric used for throttling the consumer. The factory function takes an instance of IDependencyResolver, allowing you to resolve dependencies required to create an instance of IConsumerThrottlingMetric.",source:"@site/docs/reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling.Configuration/IConsumerThrottlingMetricConfigurationBuilder/AddMetric.md",sourceDirName:"reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling.Configuration/IConsumerThrottlingMetricConfigurationBuilder",slug:"/reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling.Configuration/IConsumerThrottlingMetricConfigurationBuilder/AddMetric",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling.Configuration/IConsumerThrottlingMetricConfigurationBuilder/AddMetric",draft:!1,unlisted:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling.Configuration/IConsumerThrottlingMetricConfigurationBuilder/AddMetric.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IConsumerThrottlingMetricConfigurationBuilder interface",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling.Configuration/IConsumerThrottlingMetricConfigurationBuilder/"},next:{title:"IConsumerThrottlingMetricConfigurationBuilder.WithInterval method",permalink:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling.Configuration/IConsumerThrottlingMetricConfigurationBuilder/WithInterval"}},s={},c=[{value:"Return Value",id:"return-value",level:2},{value:"See Also",id:"see-also",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"iconsumerthrottlingmetricconfigurationbuilderaddmetric-method",children:"IConsumerThrottlingMetricConfigurationBuilder.AddMetric method"}),"\n",(0,t.jsxs)(r.p,{children:["Configures the metric used for throttling the consumer. The factory function takes an instance of IDependencyResolver, allowing you to resolve dependencies required to create an instance of ",(0,t.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling/IConsumerThrottlingMetric/",children:(0,t.jsx)(r.code,{children:"IConsumerThrottlingMetric"})}),"."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",children:"public IConsumerThrottlingMetricConfigurationBuilder AddMetric(\n    Func<IDependencyResolver, IConsumerThrottlingMetric> factory)\n"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"parameter"}),(0,t.jsx)(r.th,{children:"description"})]})}),(0,t.jsx)(r.tbody,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"factory"}),(0,t.jsxs)(r.td,{children:["A factory function that accepts an IDependencyResolver and returns an ",(0,t.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling/IConsumerThrottlingMetric/",children:(0,t.jsx)(r.code,{children:"IConsumerThrottlingMetric"})}),"."]})]})})]}),"\n",(0,t.jsx)(r.h2,{id:"return-value",children:"Return Value"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling.Configuration/IConsumerThrottlingMetricConfigurationBuilder/",children:(0,t.jsx)(r.code,{children:"IConsumerThrottlingMetricConfigurationBuilder"})})," for method chaining."]}),"\n",(0,t.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["interface\xa0",(0,t.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling/IConsumerThrottlingMetric/",children:"IConsumerThrottlingMetric"})]}),"\n",(0,t.jsxs)(r.li,{children:["interface\xa0",(0,t.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow/KafkaFlow.Middlewares.ConsumerThrottling.Configuration/IConsumerThrottlingMetricConfigurationBuilder/",children:"IConsumerThrottlingMetricConfigurationBuilder"})]}),"\n",(0,t.jsxs)(r.li,{children:["namespace\xa0",(0,t.jsx)(r.a,{href:"/kafkaflow/docs/reference/KafkaFlow/",children:"KafkaFlow.Middlewares.ConsumerThrottling.Configuration"})]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);